using System;

namespace Anonymous_methods
{
    delegate int Sum(int number);

    // Идея замыканий состоит в доступе анонимного метода не только к переданным параметрам, 
    // но и к внешнему окружению.

    // Внешняя переменная (outer variable) – это локальная переменная или параметр (за исключением ref- и out-параметров), 
    // доступные внутри метода, в котором объявлен анонимный метод (ключевое слово this можно также рассматривать 
    // как локальную переменную, поэтому внутри анонимного метода можно получить доступ ко всем членам текущего класса).
    
    // Захваченная внешняя переменная (captured outer variable) или 
    // просто захваченная переменная (captured variable) – это внешняя переменная, 
    // используемая внутри анонимного метода.

    class Program
    {
        static Sum SomeVar()
        {
            int result = 0; // Захваченная внешняя переменная

            // Если локальная переменная, которая обычно прекращает свое существование 
            // после выхода из кодового блока, используется в анонимном методе, 
            // то она продолжает существовать до тех пор, пока не будет уничтожен делегат, 
            // ссылающийся на этот метод.

            // Вызов анонимного метода
            Sum del = delegate(int number)
            {
                for (int i = 0; i <= number; i++)
                    result += i;
                return result;
            };
            return del;
        }

        static void Main()
        {
            Sum del = SomeVar();
            for (int i = 5; i >= 1; i--)
            {
                Console.WriteLine("Cумма чисел в диапазоне от 0 до {0} равна: {1}", i, del(i));
            }
        }
    }
}